#import "./filters.graphql"
#import "./categories.graphql"
#import "./demographics.graphql"
#import "./entity.graphql"
#import "./features.graphql"
#import "./github.graphql"
#import "./matrices.graphql"
#import "./mdn.graphql"
#import "./opinions.graphql"
#import "./other_features.graphql"
#import "./other_tools.graphql"
#import "./resources.graphql"
#import "./tools.graphql"
#import "./translations.graphql"
#import "./environments.graphql"
#import "./proficiency.graphql"

enum SurveyType {
    state_of_js
    state_of_css
}

"""
A survey
"""
type Survey @cacheControl(maxAge: 600) {
    """
    The survey's name
    """
    surveyName: SurveyType
    """
    Experience results for a specific tool
    """
    tool(id: ToolID!): Tool
    """
    Experience results for a range of tools
    """
    tools(ids: [ToolID]): [Tool] @cacheControl(maxAge: 600)
    """
    Other tools (browsers, editors, etc.)
    """
    tools_others(id: OtherToolsID!, filters: Filters): OtherTools
    """
    Rankings (awareness, interest, satisfaction) for a range of tools
    """
    tools_rankings(ids: [ToolID]!, filters: Filters): ToolsRankings
    """
    Usage results for a specific feature
    """
    feature(id: FeatureID!): Feature
    """
    Usage results for a range of features
    """
    features(ids: [FeatureID]): [Feature] @cacheControl(maxAge: 600)
    """
    Choice based features
    """
    features_others(id: OtherFeaturesID!): OtherFeatures
    """
    Demographics data (gender, company size, salary, etc.)
    """
    demographics: Demographics
    """
    Opinions data
    """
    opinion(id: OpinionID!, filters: Filters): Opinion
    """
    Resources (sites, blogs, podcasts, etc.)
    """
    resources(id: ResourcesID!, filters: Filters): Resources
    """
    Data about a specific tool category
    """
    category(id: CategoryID!): Category
    """
    Matrices data (used for cross-referencing heatmap charts)
    """
    matrices: Matrices
    """
    Environments data, for those based on multiple choices,
    such as browsers, form factors... Only contain predifined
    choices, freeform answers are stored in `environmentsOthers`.
    """
    environments(id: EnvironmentID!): Environments
    """
    Environments data, for those based on rating, such as css for emails...
    """
    environments_ratings(id: EnvironmentID!): EnvironmentsRatings
    """
    Proficiency data, such as backend proficiency, javascript...
    """
    proficiency(id: ProficiencyID!): Proficiency
}
